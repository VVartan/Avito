# -*- coding: utf-8 -*-
"""P10

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15puR4bnioWbPUwuaCEO6KOZDOo7J9sUX
"""

from keyword import iskeyword


class Insidelibrary:
  # initial dictinary

     def __init__(self, data):
        for key, element in data.items():
            if iskeyword(key):
                key += '_'
            if isinstance(element, dict):
                self.__dict__[key] = InsideClass(element)
            else:
                self.__dict__[key] = element

class ColorizeMixin:
    def __init__(self, style=1, text_color=32, background_color=47): # mixin green
        self.style = style
        self.text_color = text_color
        self.background_color = background_color
    
    def __str__(self):
        text = self.__repr__()
        return f"\033[{self.style};{self.text_color};{self.background_color}m {text} \033[m"

class Advert(ColorizeMixin):  #dynamic attribute creation, tranformation
    
    def __init__(self, data):
        super().__init__()
        self.__dict__.update(InsideLibrary(data).__dict__)

  
    def __init__(self, data):
        super().__init__()
        self.__dict__.update(InsideLibrary(data).__dict__)
  
  
    def __repr__(self):
        return f"{self.title} | {self.price} ₽"

    @property
    def price(self):
        if "price" not in self.__dict__:
            return 0
        else:
            return self.__dict__["price"]

    @price.setter
    def price(self, new_price):
        if new_price < 0:
            raise ValueError("price >= 0")
        self._price = new_price


   if __name__ == "__main__":
    test_1 = """{
        "title": "iPhone X",
        "price": 100,
        "class": "телефон",
        "location": {
        "address": "город Москва, Лесная, 7",
        "metro_stations": ["Белорусская"]
        }
    }"""
    test_1 = Advert(json.loads(test_1))
    return test_1.title
    return test_1.price
    return test_1.location.address
    test_2 = """{
        "title": "Птички",
        "price": 1000,
        "class": "птицы",
        "location": {
        "address": "address": "город Москва, Лесная, 7",
        "metro_stations": ["Белорусская"]
        }
    }"""
    test_2 = Advert(json.loads(test_2))
    return test_1.title
    return test_1.price
    return test_1.location.address
    test_3 = """{
            "title": "Котики",
            "price": 17,
            "class": "cats",
            "address": "address": "город Москва, Лесная, 7",
            "metro_stations": ["Белорусская"]
            }
        }"""
    ad_test_3 = Advert(json.loads(test_3))
    return test_3.title
    return test_3.price
    return test_3.location.address